# KeyBindings
# "bind -r"はrepeat-timeで指定したミリ秒再度Prefixを押さずに入力可能にできる。
# "bind -n"はPrefix(Ctrl+t)が不要になる。
# "bind -t"はkeyはkey-table内に割り当てられる。

# Prefixを＜Ctrl + b＞から＜Ctrl + t＞に変えます。
# 例：新しいウィンドウを開くときは＜Ctrl + t＞＜c＞と押すことになります。
# "t"以外の好きなキーにしても問題ありません。他の操作と重複しないようにしましょう。
set-option -g prefix C-t

# デフォルトのPrefix(C-b)を解除
unbind C-b

#全てのベルを無視
set-option -g bell-action none

# 256色端末を使用する
set -g default-terminal "screen-256color"

# 下記の設定をしておいたほうがEscの効きがいいらしい
set -s escape-time 0

# ウィンドウ履歴の最大行数
set-option -g history-limit 10000

# Option
# utf8有効
set-window-option -g utf8 on
# ステータスバーを Utf-8 に対応
set-option -g status-utf8 on
# コピー、選択モードのキーバインドvi/emacs
set-window-option -g mode-keys vi
# 画面ドラッグ時にコピーモードにする
setw -g mode-mouse on
# マウスでペインを選択できるようにする
set-option -g mouse-select-pane on
set -g mouse-select-pane on
# マウスでリサイズできるようにする
set -g mouse-resize-pane on
# マウスでウィンドウを切り替えられるようにする
set -g mouse-select-window on
# ウィンドウのインデックスを1から始める
set-option -g base-index 1
# ペインのインデックスを1から始める
setw -g pane-base-index 1
# ウィンドウの自動リネームoff
set-window-option -g automatic-rename off

# View
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
##ウィンドウで動作があるとステータスラインでハイライト
set-window-option -g monitor-activity on
set -g visual-activity on

# ステータスライン更新間隔(秒)
set -g status-interval 1
set -g status-left-length 50
set -g status-right-length 100

set-option -g set-titles on
# www1.hoge.com→www1のみ表示。
set-option -g set-titles-string "@#(hostname | sed 's/\\\\..*//')"

# ステータスバーの色を設定する
set -g status-bg black
set -g status-fg white

# ステータスラインカスタム関連
set -g status-attr bright
# 左部:whoami@hostname
set -g status-left '#[fg=green,bold][#20(whoami)]#[default]'
# 右部:[LANG, 起動時間, ロードアベレージ, メモリ使用率, 現在時刻]
set -g status-right '[ #[fg=white,bold]#(echo $LANG)#[default] < #[fg=blue]up #(pc-running-time)#[default] < #[fg=magenta](#(loadaverage)) Mem #(used-mem)%%#[default] < #[fg=red,bold]%y/%m/%d(%a)%H:%M:%S#[default] ]'


# コマンドラインの色を設定する
set -g message-attr bold
set -g message-fg white
# コマンドラインの補完候補の色
set -g message-bg red
# set -g message-bg bright

# ペインボーダーの色を設定する
set -g pane-border-fg white
set -g pane-border-bg black
# アクティブなペインをボーダーの色を変えて目立たせる
# set -g pane-active-border-fg cyan
# set -g pane-active-border-fg colour247
# 群青色
# set -g pane-active-border-fg colour129
# 黄緑
# set -g pane-active-border-fg colour190
# 黄色
# set -g pane-active-border-fg colour230
# 灰色
# set -g pane-active-border-fg colour240
# 薄い赤色
# set -g pane-active-border-fg colour220
set -g pane-active-border-fg lavendar
set -g pane-active-border-bg black

set-window-option -g mode-bg white
set-window-option -g mode-fg black

# ウィンドウリストの色を設定する
set-window-option -g window-status-bg black
# setw -g window-status-bg default
set-window-option -g window-status-fg white
setw -g window-status-attr dim

# ウィンドウリスト現在のウィンドウの色の設定
set-window-option -g window-status-current-bg green
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-attr bold

#
# キーバインド（コピーモード）
#
#コピーモード開始
bind Space copy-mode
bind p paste-buffer
# vでマーク開始
bind -t vi-copy v begin-selection
# Vで行の先頭からマーク開始
bind -t vi-copy V select-line
# C-vで矩形選択の切り替え
bind -t vi-copy C-v rectangle-toggle
# yでヤンク
bind -t vi-copy y copy-selection
# Yで1行ヤンク
bind -t vi-copy Y copy-line


# 設定リロード
bind r source-file ~/.tmux.conf
# ウィンドウ選択画面
bind Space choose-window
# ペイン番号表示
bind i display-panes

# ウィンドウの移動
# Prefix(ここではCtrl+t)を連続入力することでウィンドウを移動させます。
bind C-t next-window
bind -r C-n next-window
bind -r C-p previous-window

# 分割していたペインそれぞれをWindowに
bind b break-pane

# ウィンドウタイトル変更 A
bind A command-prompt "rename-window %%"

# ペイン終了
bind k kill-pane
# ウィンドウ終了
# bind K kill-window

# ウィンドウを(ペインに)分割
# ＜Prefix＞＜v＞、＜Prefix＞＜h＞と入力するだけで分割できるようにします。
unbind '"'
unbind '%'
unbind v
unbind h
unbind '\'
unbind '|'
unbind '-'
bind v split-window -v
bind h split-window -h
bind '\' split-window -h
bind '|' split-window -h
bind '-' split-window -v

# ペインのサイズ変更をvim風にする
# ＜Prefix＞＜Ctrl + { h | i | j | k }＞
# ＜Ctrl + { h | i | j | k }＞は連続して入力可能。
# 1回押すごとに1行(列)境界を移動させる。
bind -r C-h resize-pane -L 1
bind -r C-l resize-pane -R 1
bind -r C-j resize-pane -D 1
bind -r C-k resize-pane -U 1

# ペインの移動1(Vim風にする)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ペインの移動2
# Shift + 上下左右でペインを移動できるようにする。(＜Prefix＞不要)
# 行頭に"bind -n"をつけるとPrefixが不要になる。
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R

